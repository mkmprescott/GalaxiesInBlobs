  PRO apfinder, npix_x, npix_y, ap_radius_pix, ap_radius, dim, bpm, hdr, ap_count, ap_x, ap_y, nbadpix, ntotalpix, ap_ra, ap_dec, blobra=blobra,blobdec=blobdec          ;;
  ;-------------------------------------------------------------------------------------------------------------------------------------------------;                     ;
  ; apfinder procedure                                                                                                                              ;                     ;
  ;   description                                                                                                                                   ;                     ;
  ; INPUTS: etc                                                                                                                                     ;                     ;
  ;         etc                                                                                                                                     ;                     ;
  ; NOTE:                                                                                                                                           ;                     ; 
  ;-------------------------------------------------------------------------------------------------------------------------------------------------;                     ;
    repeatflag = 0.       ; this will ensure that apertures don't get wasted on areas with only bad pixels                                                                ;
    ap_count++                                                                                                                                                           ;;
    WHILE (repeatflag EQ 0.) DO BEGIN                                                                                                                                    ;;
      ; make a random aperture:                                                                                                                                           ;
       ap_x = floor(ap_radius_pix + (double(npix_x)-2.*ap_radius_pix)*randomu(seed))                                                                                     ;;
       ap_y = floor(ap_radius_pix + (double(npix_y)-2.*ap_radius_pix)*randomu(seed))                                                                                     ;;
      ; FIND BAD PIXELS:                                                                                                                                                  ;
       ; find corners of box into which to insert aperture image                                                                                                          ; 
       xlo = ap_x - floor(ap_radius_pix)                                                                                                                                 ;; 
       xhi = ap_x + floor(ap_radius_pix)                                                                                                                                 ;;
       ylo = ap_y - floor(ap_radius_pix)                                                                                                                                 ;;  
       yhi = ap_y + floor(ap_radius_pix)                                                                                                                                 ;;
       dimsize = size(dim)                                                                                                                                               ;;
       IF ((xhi-xlo) NE (dimsize[1]-1.)) THEN BEGIN                                                                                                                      ;;
         xhi = ap_x + floor(ap_radius_pix) - 1.                                                                                                                          ;;
       ENDIF                                                                                                                                                             ;;
       IF ((yhi-ylo) NE (dimsize[2]-1.)) THEN BEGIN                                                                                                                      ;;
         yhi = ap_y + floor(ap_radius_pix) - 1.                                                                                                                          ;;
       ENDIF                                                                                                                                                             ;;
       ; cut out the piece of the bpm that contains this random aperture                                                                                                  ;
       minibpm = bpm[xlo:xhi,ylo:yhi]                                                                                                                                    ;;
       ; multiply the aperture map by the bpm so only BAD pixels INSIDE the aperture are left (since we want to count them):                                              ;
       apbpm = minibpm*dim                                                                                                                                               ;;
       badpix = where(apbpm GT 0, nbadpix)   ; label the bad pixels                                                                                                       ;
                                                                                                                                                                         ;;
      ; FIND VICINITY TO BLOB:                                                                                                                                            ;
       IF (n_elements(blobra) NE 0) THEN BEGIN                                                                                                                           ;;
         xyad, hdr,ap_x, ap_y, ap_ra, ap_dec      ; convert pixels into coordnates in sky                                                                                 ;
         ; find how close the aperture is to the blob:                                                                                                                    ;
         vicinity = sqrt(  ( (blobra - ap_ra) * cos(blobdec*!dPI/180.) )^2. + (blobdec - ap_dec)^2. )                                                                    ;;
       ENDIF ELSE vicinity = 3.*ap_radius   ; if we're looking in a field that doesn't contain the blob, it doesn't matter because there's no blob to avoid               ;
                                                                                                                                                                         ;;
      ; if the aperture has at least some good pixels AND isn't near the blob, then keep it; otherwise, throw it out and make a new aperture                              ;
      pixratio = float(nbadpix)/float(ntotalpix)
      IF ((nbadpix LT ntotalpix) AND (vicinity GT 2.*ap_radius)) THEN BEGIN      
        print, 'KEEPING aperture ', strcompress(string(ap_count)), ' with bad/total pixel ratio of ', strcompress(string(pixratio))                                                                                        ;;
        repeatflag = 1.                                                                                                                                                  ;; 
      ENDIF ELSE BEGIN                                                                                                                                                   ;;
        repeatflag = 0.                                                                                                                                                  ;;
        ; keep a record of why this aperture was thrown out, just to make sure nothing is going amiss                                                                     ;
;        pixratio = float(nbadpix)/float(ntotalpix)                                                                                                                       ;;
        print, 'aperture ', strcompress(string(ap_count)), ' was within ', strcompress(string(vicinity/ap_radius)), $                                                    ;;
          ' aperture radii of LAB with bad/total pixel ratio of ', strcompress(string(pixratio))                                                                         ;;
        ap_count++    ; note that another aperture is being made since this one failed to meet the criteria for a good aperture                                           ;
      ENDELSE                                                                                                                                                            ;;
    ENDWHILE                                                                                                                                                             ;;
       ; once the aperture passes the above WHILE test, it can be used                                                                                                    ;
  END     